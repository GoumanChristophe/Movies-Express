<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Express Movies</title>
    <link rel="stylesheet" href="../public/style.css" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <%- include('./partials/header') %>

    <div class="central">
        <h1><%= title %></h1>
        <br>
        <div id="login">
            <form id="loginForm">
                <legend>Veuillez saisir vos identifiants</legend>
                <label for="email">email</label>
                <input type="text" name="email" id="email">
                <label for="password">mot de passe</label>
                <input type="password" name="password" id="password">
                <button type="submit">connexion</button>
            </form>
        </div>

        <div id="profile" style="display:none">
            <button id="disconnectBtn">DÃ©connexion</button>
            <button id="display-payload">Voir le payload</button>
            <div id="decoded-payload"></div>
            <div>
                <a href="#" id="member-only"> espace Membre</a>
            </div>
        </div>
    </div>

    <footer>
        <%- include('./partials/footer') %>
    </footer>
    <script>

document.addEventListener("DOMContentLoaded", function() {
    const form = document.getElementById('loginForm');
    form.addEventListener("submit", loginUser);

    const loginArea = document.querySelector('#login');
    const profileArea = document.querySelector('#profile');

    const displayPayloadBtn = document.querySelector('#display-payload');
    displayPayloadBtn.addEventListener('click', displayPayload);

    const disconnectBtn = document.querySelector('#disconnectBtn');
    disconnectBtn.addEventListener('click', disconnect);

    const memberOnlyLink = document.querySelector('#member-only');
    memberOnlyLink.addEventListener('click', makeRequestWithToken);

    function loginUser(event) {
        event.preventDefault();
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;

        fetch('/login', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: `email=${encodeURIComponent(email)}&password=${encodeURIComponent(password)}`,
        })
        .then(response => response.json())
        .then(data => {
            localStorage.setItem('token', data.token);
            switchLoggedinMode();
        })
        .catch(error => console.error('Error:', error));
    }

    function displayPayload() {
        const payload = parseJwt();
        document.querySelector("#decoded-payload").innerHTML = '<pre>' + JSON.stringify(payload) + '</pre>';
    }

    function parseJwt() {
        const token = localStorage.getItem('token');
        if (!token) return;
        const base64Payload = token.split('.')[1];
        return JSON.parse(window.atob(base64Payload));
    }

    function disconnect() {
        localStorage.removeItem('token');
        switchLoggedOutMode();
    }

    function makeRequestWithToken(event) {
    event.preventDefault();
    console.log("Requested endpoint:", this.id);
    var page = this.id; 
    var tokenFromStorage = localStorage.getItem('token');
    var config = {};
    if (tokenFromStorage) {
        config.headers = {'Authorization': 'Bearer ' + tokenFromStorage}; // Modification ici
    }

    axios.get('http://localhost:3000/' + page, config)
        .then(res => {
            console.log('Success');
            console.log(res);
        }).catch(err => {
            console.error('makeRequestWithToken err', err);
        });
}
    function switchLoggedinMode() {
        loginArea.style.display = 'none';
        profileArea.style.display = 'block';
    }

    function switchLoggedOutMode() {
        loginArea.style.display = 'block';
        profileArea.style.display = 'none';
    }

    function handleFormDisplay() {
        localStorage.getItem('token') ? switchLoggedinMode() : switchLoggedOutMode();
    }

    handleFormDisplay();
    
})

    </script>
</body>
</html>

	